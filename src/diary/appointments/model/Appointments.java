package diary.appointments.model;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.*;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;

import diary.appointments.config.DBConfig;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;;

@DynamoDBTable(tableName = DBConfig.DYNAMODB_TABLE_NAME)

public class Appointments {
	
	public UUID id;
	
	public long date;
	
	public int duration;
	
	public String description;
	
	public String owner;
	
	//default constructor
	public Appointments() {
		
	}
	
	//constructor
	public Appointments(UUID id, long date, int duration, String description, String owner) {
		if (id != null) {
			this.setId(id);
		}
		else {
			this.setId(UUID.randomUUID());
		}
		
		this.setDate(date);
		this.setDuration(duration);
		this.setDescription(description);
		this.setOwner(owner);
	}


	@DynamoDBHashKey(attributeName="id")
	@DynamoDBAutoGeneratedKey
	public UUID getId() {
		return id;
	}


	public void setId(UUID id) {
		this.id = id;
	}

	@DynamoDBAttribute(attributeName="date")
	public long getDate() {
		return date;
	}


	public void setDate(long date) {
		this.date = date;
	}

	@DynamoDBAttribute(attributeName="duration")
	public int getDuration() {
		return duration;
	}


	public void setDuration(int duration) {
		this.duration = duration;
	}

	@DynamoDBAttribute(attributeName="description")
	public String getDescription() {
		return description;
	}


	public void setDescription(String description) {
		this.description = description;
	}

	@DynamoDBAttribute(attributeName="owner")
	public String getOwner() {
		return owner;
	}


	public void setOwner(String owner) {
		this.owner = owner;
	}
	
	//Returns time in a human readable form
	
	public String humanTime() {
		String time;
		DateFormat format = new SimpleDateFormat("dd:MM:yyyy 'at' HH:mm");
		
		Date date = new Date(this.getDate()*1000L);
		
		time = format.format(date);
		
		return time;
	}
	
	@Override
	
	public String toString() {
		
		return "Appointment [id=" + id + ", date=" + date + ", duration=" + duration + ", description=" + description + ", owner=" + owner + "]";
		
	}
	
	

}
